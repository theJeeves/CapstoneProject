using UnityEngine;
using System.Collections;

public class PlayerInvulnerabilityAnim : MonoBehaviour {

    private SpriteRenderer _player;
    [SerializeField]
    private SpriteRenderer _sg;
    [SerializeField]
    private SpriteRenderer _mg;

    private float _time;

    private void Awake() {
        _player = GetComponent<SpriteRenderer>();
    }

    private void OnEnable() {
        PlayerHealth.StartInvulnAnim += StartAnimation;
    }

    private void OnDisable() {
        PlayerHealth.StartInvulnAnim -= StartAnimation;
    }

    private void StartAnimation(float recoveryTime) {
        _time = recoveryTime;
        StartCoroutine(Animate());
    }

    private IEnumerator Animate() {

        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
    }

    private void Hide() {
        _player.enabled = false;
        _sg.enabled = false;
        _mg.enabled = false;
    }

    private void Show() {
        _player.enabled = true;
        _sg.enabled = true;
        _mg.enabled = true;
    }
}
